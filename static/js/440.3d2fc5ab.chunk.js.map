{"version":3,"file":"static/js/440.3d2fc5ab.chunk.js","mappings":"uPACA,EAAgC,6BAAhC,EAAyE,yBAAzE,EAA6G,wBAA7G,EAA+I,uBAA/I,EAAyL,gCAAzL,EAAkP,sC,mBCqGlP,IAAMA,EAAqB,CACvBC,QAASC,EAAAA,EAAAA,OAGb,GAAeC,EAAAA,EAAAA,IAAQ,KAAMH,EAA7B,EAjGA,YAA6B,IAAZC,EAAW,EAAXA,QACb,GAA0BG,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAqCA,OACI,4BACI,SAACC,EAAA,EAAD,CACIC,IAAI,EACJC,QAAQ,EACRC,QAAS,IACTC,WAAY,CACRF,OAAQG,EACRC,aAAcD,GANtB,UASI,iBAAKE,UAAWF,EAAhB,WACI,mCAEA,kBACIG,SA1BC,SAACC,GAClBA,EAAMC,iBAjBa,WACnB,GAAa,IAATd,GAA2B,IAAZE,EAWf,OAVAa,EAAAA,GAAAA,MAAY,kCAAmC,CAC3CC,SAAU,aACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,KAGP,EAMPC,KAIJ5B,EAAQ,CAAEI,MAAAA,EAAOE,SAAAA,IACjBD,EAAS,IACTE,EAAY,MAmBIsB,aAAa,MACbd,UAAWF,EAHf,WAKI,mBAAOiB,GAAG,UAAV,mBAEI,kBACIC,KAAK,QACLC,KAAK,QACLC,MAAO7B,EACP8B,SA5DR,SAACjB,GACjBZ,EAASY,EAAMkB,OAAOF,QA4DElB,UAAWF,QAGnB,mBAAOiB,GAAG,UAAV,sBAEI,kBACIC,KAAK,WACLC,KAAK,WACLC,MAAO3B,EACP4B,SAlEL,SAACjB,GACpBV,EAAYU,EAAMkB,OAAOF,QAkEDlB,UAAWF,QAGnB,mBAAQkB,KAAK,SAAShB,UAAWF,EAAjC,UACI,6CAKhB,SAAC,KAAD,W,iECzFG,SAASuB,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,IAAIG,EAAY,MAAPJ,EAAc,KAAyB,qBAAXK,QAA0BL,EAAIK,OAAOC,WAAaN,EAAI,cAE3F,GAAU,MAANI,EAAJ,CACA,IAIIG,EAAIC,EAJJC,EAAO,GACPC,GAAK,EACLC,GAAK,EAIT,IACE,IAAKP,EAAKA,EAAGQ,KAAKZ,KAAQU,GAAMH,EAAKH,EAAGS,QAAQC,QAC9CL,EAAKM,KAAKR,EAAGX,QAETK,GAAKQ,EAAKO,SAAWf,GAH4BS,GAAK,IAK5D,MAAOO,GACPN,GAAK,EACLH,EAAKS,EACL,QACA,IACOP,GAAsB,MAAhBN,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIO,EAAI,MAAMH,GAIlB,OAAOC,GFtBuB,CAAqBT,EAAKC,KAAM,EAAAiB,EAAA,GAA2BlB,EAAKC,IGLjF,WACb,MAAM,IAAIkB,UAAU,6IHIgF","sources":["webpack://goit-react-hw-09-phonebook/./src/components/Login/Login.module.css?3530","components/Login/Login.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"FormContainer\":\"Login_FormContainer__hH03v\",\"Container\":\"Login_Container__IsndJ\",\"FormItem\":\"Login_FormItem__+APZi\",\"FormBtn\":\"Login_FormBtn__wL37A\",\"HeaderFadeAppear\":\"Login_HeaderFadeAppear__Wfm2v\",\"HeaderFadeAppearActive\":\"Login_HeaderFadeAppearActive__WawHx\"};","import { useState } from 'react'\r\nimport { ToastContainer, toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport { connect } from 'react-redux'\r\nimport authOperations from '../../redux/auth/auth-operations'\r\nimport PropTypes from 'prop-types'\r\nimport styles from './Login.module.css'\r\nimport { CSSTransition } from 'react-transition-group'\r\n\r\nfunction Login({ onLogin }) {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const handleEmail = (event) => {\r\n        setEmail(event.target.value)\r\n    }\r\n\r\n    const handlePassword = (event) => {\r\n        setPassword(event.target.value)\r\n    }\r\n\r\n    const checkLoginData = () => {\r\n        if (email == '' || password == '') {\r\n            toast.error('Email or password cant be empty', {\r\n                position: 'top-center',\r\n                autoClose: 2000,\r\n                hideProgressBar: true,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            })\r\n\r\n            return true\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        if (checkLoginData()) {\r\n            return\r\n        }\r\n\r\n        onLogin({ email, password })\r\n        setEmail('')\r\n        setPassword('')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <CSSTransition\r\n                in={true}\r\n                appear={true}\r\n                timeout={500}\r\n                classNames={{\r\n                    appear: styles.HeaderFadeAppear,\r\n                    appearActive: styles.HeaderFadeAppearActive,\r\n                }}\r\n            >\r\n                <div className={styles.Container}>\r\n                    <h1>Login</h1>\r\n\r\n                    <form\r\n                        onSubmit={handleSubmit}\r\n                        autoComplete=\"off\"\r\n                        className={styles.FormContainer}\r\n                    >\r\n                        <lable is=\"webview\">\r\n                            EMAIL\r\n                            <input\r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                value={email}\r\n                                onChange={handleEmail}\r\n                                className={styles.FormItem}\r\n                            ></input>\r\n                        </lable>\r\n                        <lable is=\"webview\">\r\n                            PASSWORD\r\n                            <input\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                value={password}\r\n                                onChange={handlePassword}\r\n                                className={styles.FormItem}\r\n                            ></input>\r\n                        </lable>\r\n                        <button type=\"submit\" className={styles.FormBtn}>\r\n                            <h3>LOGIN</h3>\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </CSSTransition>\r\n            <ToastContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nLogin.propTypes = {\r\n    onLogin: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onLogin: authOperations.login,\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Login)\r\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["mapDispatchToProps","onLogin","authOperations","connect","useState","email","setEmail","password","setPassword","CSSTransition","in","appear","timeout","classNames","styles","appearActive","className","onSubmit","event","preventDefault","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","checkLoginData","autoComplete","is","type","name","value","onChange","target","_slicedToArray","arr","i","Array","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","push","length","err","unsupportedIterableToArray","TypeError"],"sourceRoot":""}