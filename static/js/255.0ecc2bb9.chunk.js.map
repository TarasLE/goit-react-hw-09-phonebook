{"version":3,"file":"static/js/255.0ecc2bb9.chunk.js","mappings":"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","sources":["redux/phonebook/phonebook-operations.js","webpack://goit-react-hw-09-phonebook/./src/components/Contactform/ContactForm.module.css?d1c9","webpack://goit-react-hw-09-phonebook/./src/components/Notification/Notification.module.css?a91f","components/Notification/Notification.js","components/Contactform/ContactForm.js","redux/phonebook/phonebook-selectors.js","webpack://goit-react-hw-09-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.js","components/Loader/Loader.js","webpack://goit-react-hw-09-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","webpack://goit-react-hw-09-phonebook/./src/components/Phonebook/Phonebook.module.css?3a02","components/Phonebook/Phonebook.js"],"sourcesContent":["import axios from 'axios'\r\nimport {\r\n    addContactSuccess,\r\n    addContactRequest,\r\n    addContactError,\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError,\r\n    fetchContactRequest,\r\n    fetchContactSuccess,\r\n    fetchContactError,\r\n} from './phonebook-actions'\r\n\r\nconst fetchContacts = () => async (dispatch) => {\r\n    dispatch(fetchContactRequest())\r\n    try {\r\n        const { data } = await axios.get('/contacts')\r\n        dispatch(fetchContactSuccess(data))\r\n    } catch (error) {\r\n        dispatch(fetchContactError(error.message))\r\n    }\r\n}\r\n\r\nconst addContact = (contact) => async (dispatch) => {\r\n    dispatch(addContactRequest())\r\n\r\n    try {\r\n        const { data } = await axios.post('/contacts', contact)\r\n        dispatch(addContactSuccess(data))\r\n    } catch (error) {\r\n        dispatch(addContactError(error.message))\r\n    }\r\n}\r\n\r\nconst deleteContact = (contactId) => async (dispatch) => {\r\n    dispatch(deleteContactRequest())\r\n    try {\r\n        const { data } = await axios.delete(`/contacts/${contactId}`)\r\n        dispatch(deleteContactSuccess(contactId))\r\n    } catch (error) {\r\n        dispatch(deleteContactError(error.message))\r\n    }\r\n}\r\n\r\nexport default { addContact, deleteContact, fetchContacts }\r\n","// extracted by mini-css-extract-plugin\nexport default {\"Container\":\"ContactForm_Container__qm9Vs\",\"InputName\":\"ContactForm_InputName__rTPjw\",\"FormInput\":\"ContactForm_FormInput__zsTjx\",\"FormBtn\":\"ContactForm_FormBtn__QfXDU\",\"ContactFormNotificationFadeEnter\":\"ContactForm_ContactFormNotificationFadeEnter__pcqKI\",\"ContactFormNotificationFadeEnterActive\":\"ContactForm_ContactFormNotificationFadeEnterActive__tSU0-\",\"ContactFormNotificationFadeExit\":\"ContactForm_ContactFormNotificationFadeExit__+qmbK\",\"ContactFormNotificationFadeExitActive\":\"ContactForm_ContactFormNotificationFadeExitActive__xM41A\"};","// extracted by mini-css-extract-plugin\nexport default {\"Notification\":\"Notification_Notification__Sau8z\",\"FormBtn\":\"Notification_FormBtn__qinXS\"};","import React, { Component } from 'react'\r\nimport styles from './Notification.module.css'\r\nimport PropTypes from 'prop-types'\r\n\r\nNotification.propTypes = {\r\n    sameContact: PropTypes.string.isRequired,\r\n    currentNumber: PropTypes.string.isRequired,\r\n}\r\n\r\nfunction Notification({ sameContact, currentNumber }) {\r\n    return (\r\n        <div className={styles.Notification}>\r\n            {sameContact && currentNumber ? (\r\n                <div>\r\n                    <h2>{sameContact} is already in contacts</h2>\r\n                    <h3>Please check name and try again</h3>\r\n                </div>\r\n            ) : (\r\n                <div>\r\n                    <h2>Name or number is epmty</h2>\r\n                    <h3>Please fill data and try again</h3>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification\r\n","import { useState } from 'react'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport { connect } from 'react-redux'\r\nimport phonebookOperations from '../../redux/phonebook/phonebook-operations'\r\nimport styles from './ContactForm.module.css'\r\nimport shortid from 'shortid'\r\nimport './ContactForm.css'\r\nimport Notification from '../Notification/Notification'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction ContactForm({ contacts, addContact }) {\r\n    const [name, setName] = useState('')\r\n    const [number, setNumber] = useState('')\r\n    const [alert, setAlert] = useState(false)\r\n\r\n    const handleName = (event) => {\r\n        setName(event.target.value)\r\n    }\r\n\r\n    const handleNumber = (event) => {\r\n        setNumber(event.target.value)\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        if (checkContact()) {\r\n            return\r\n        } else {\r\n            const contact = {\r\n                id: shortid.generate(),\r\n                name: name,\r\n                number: number,\r\n            }\r\n            addContact(contact)\r\n            clearInput()\r\n        }\r\n    }\r\n    const checkContact = () => {\r\n        if (\r\n            contacts.find((contact) => {\r\n                return (\r\n                    contact.name.toLowerCase() === name.toLowerCase() &&\r\n                    contact.number.toLowerCase() === number.toLowerCase()\r\n                )\r\n            }) ||\r\n            name == '' ||\r\n            number == ''\r\n        ) {\r\n            setAlert(true)\r\n            alertState()\r\n            return true\r\n        }\r\n    }\r\n\r\n    const clearInput = () => {\r\n        setName('')\r\n        setNumber('')\r\n    }\r\n\r\n    const alertState = () => {\r\n        setTimeout(() => {\r\n            setAlert(false)\r\n        }, 2000)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.Container}>\r\n            <form onSubmit={handleSubmit}>\r\n                <label>\r\n                    Name <br />\r\n                    <input\r\n                        type=\"text\"\r\n                        value={name}\r\n                        name=\"name\"\r\n                        onChange={handleName}\r\n                        className={styles.FormInput}\r\n                    />\r\n                </label>\r\n                <br />\r\n                <label>\r\n                    Number <br />\r\n                    <input\r\n                        type=\"text\"\r\n                        value={number}\r\n                        name=\"number\"\r\n                        onChange={handleNumber}\r\n                        className={styles.FormInput}\r\n                    />\r\n                </label>\r\n                <button type=\"submit\" className={styles.FormBtn}>\r\n                    Add contact\r\n                </button>\r\n            </form>\r\n\r\n            <CSSTransition\r\n                in={alert}\r\n                timeout={250}\r\n                classNames={{\r\n                    enter: styles.ContactFormNotificationFadeEnter,\r\n                    enterActive: styles.ContactFormNotificationFadeEnterActive,\r\n                    exit: styles.ContactFormNotificationFadeExit,\r\n                    exitActive: styles.ContactFormNotificationFadeExitActive,\r\n                }}\r\n                unmountOnExit\r\n            >\r\n                <Notification\r\n                    sameContact={name}\r\n                    currentNumber={number}\r\n                ></Notification>\r\n            </CSSTransition>\r\n        </div>\r\n    )\r\n}\r\n\r\nContactForm.propTypes = {\r\n    contacts: PropTypes.array.isRequired,\r\n    addContact: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    contacts: state.contacts.items,\r\n})\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    addContact: (contact) => dispatch(phonebookOperations.addContact(contact)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm)\r\n","import { createSelector } from '@reduxjs/toolkit'\r\nconst getLoading = (state) => state.contacts.loading\r\nconst getFilter = (state) => state.contacts.filter\r\nconst getContacts = (state) => state.contacts.items\r\n\r\nconst getfilteredElements = createSelector(\r\n    [getFilter, getContacts],\r\n    (filter, contacts) => {\r\n        const normalizedFilter = filter.toLowerCase()\r\n        return contacts.filter((contact) =>\r\n            contact.name.toLowerCase().includes(normalizedFilter)\r\n        )\r\n    }\r\n)\r\n\r\nexport default {\r\n    getLoading,\r\n    getFilter,\r\n    getfilteredElements,\r\n    getContacts,\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"Container\":\"ContactList_Container__OPkvJ\",\"Contact\":\"ContactList_Contact__sbnpA\",\"DeleteBtn\":\"ContactList_DeleteBtn__DTBuZ\",\"ContactInfo\":\"ContactList_ContactInfo__x353n\",\"ContactListItemFadeEnter\":\"ContactList_ContactListItemFadeEnter__T3QEQ\",\"ContactListItemFadeEnterActive\":\"ContactList_ContactListItemFadeEnterActive__jScRb\",\"ContactListItemFadeExit\":\"ContactList_ContactListItemFadeExit__KPO89\",\"ContactListItemFadeExitActive\":\"ContactList_ContactListItemFadeExitActive__GZ5fT\"};","import { connect } from 'react-redux'\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\r\nimport phonebookOperations from '../../redux/phonebook/phonebook-operations'\r\nimport { changeFilter } from '../../redux/phonebook/phonebook-actions'\r\nimport phonebookSelectors from '../../redux/phonebook/phonebook-selectors'\r\nimport PropTypes from 'prop-types'\r\nimport styles from './ContactList.module.css'\r\nimport './ContactList.css'\r\n\r\nfunction ContactList({\r\n    filteredContacts,\r\n    contacts,\r\n    deleteContact,\r\n    resetFilter,\r\n}) {\r\n    return (\r\n        <div className={styles.Container}>\r\n            <TransitionGroup component=\"ul\" classnames={styles.ListContainer}>\r\n                {filteredContacts.map((contact) => (\r\n                    <CSSTransition\r\n                        timeout={750}\r\n                        classNames={{\r\n                            enter: styles.ContactListItemFadeEnter,\r\n                            enterActive: styles.ContactListItemFadeEnterActive,\r\n                            exit: styles.ContactListItemFadeExit,\r\n                            exitActive: styles.ContactListItemFadeExitActive,\r\n                        }}\r\n                        key={contact.id}\r\n                    >\r\n                        <li className={styles.Contact}>\r\n                            <span className={styles.ContactInfo}>\r\n                                {contact.name} : {contact.number}\r\n                            </span>\r\n                            <button\r\n                                type=\"button\"\r\n                                onClick={() => {\r\n                                    deleteContact(contact.id)\r\n                                    if (contacts.length == 2) {\r\n                                        resetFilter()\r\n                                    }\r\n                                }}\r\n                                className={styles.DeleteBtn}\r\n                            >\r\n                                Delete\r\n                            </button>\r\n                        </li>\r\n                    </CSSTransition>\r\n                ))}\r\n            </TransitionGroup>\r\n        </div>\r\n    )\r\n}\r\n\r\nContactList.propTypes = {\r\n    filteredContacts: PropTypes.array.isRequired,\r\n    contacts: PropTypes.array.isRequired,\r\n    deleteContact: PropTypes.func.isRequired,\r\n    resetFilter: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    filteredContacts: phonebookSelectors.getfilteredElements(state),\r\n    contacts: phonebookSelectors.getContacts(state),\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    deleteContact: (id) => {\r\n        dispatch(phonebookOperations.deleteContact(id))\r\n    },\r\n    resetFilter: () => {\r\n        dispatch(changeFilter(''))\r\n    },\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList)\r\n","import Spinner from 'react-loader-spinner'\r\n\r\nexport default function () {\r\n    return (\r\n        <div>\r\n            <Spinner\r\n                type=\"ThreeDots\"\r\n                color=\"#ff3b0f\"\r\n                height={100}\r\n                width={100}\r\n                timeout={3000} //3 secs\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"Container\":\"Filter_Container__WjS-m\",\"InputContainer\":\"Filter_InputContainer__imTQE\",\"FilterInput\":\"Filter_FilterInput__mHRqZ\",\"FilterHeader\":\"Filter_FilterHeader__dZ6FV\",\"FilterFadeEnter\":\"Filter_FilterFadeEnter__gUkDT\",\"FilterFadeEnterActive\":\"Filter_FilterFadeEnterActive__KWKZR\",\"FilterFadeExit\":\"Filter_FilterFadeExit__fA1Sx\",\"FilterFadeExitActive\":\"Filter_FilterFadeExitActive__6d43z\"};","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { changeFilter } from '../../redux/phonebook/phonebook-actions'\r\nimport PropTypes from 'prop-types'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport styles from './Filter.module.css'\r\nimport phonebookSelectors from '../../redux/phonebook/phonebook-selectors'\r\n\r\nfunction Filter({ contacts, value, filter }) {\r\n    return (\r\n        <CSSTransition\r\n            in={contacts.length > 1}\r\n            timeout={250}\r\n            unmountOnExit\r\n            classNames={{\r\n                enter: styles.FilterFadeEnter,\r\n                enterActive: styles.FilterFadeEnterActive,\r\n                exit: styles.FilterFadeExit,\r\n                exitActive: styles.FilterFadeExitActive,\r\n            }}\r\n        >\r\n            <div className={styles.Container}>\r\n                <label className={styles.InputContainer}>\r\n                    <h1 className={styles.FilterHeader}>\r\n                        Find contacts by Name\r\n                    </h1>\r\n\r\n                    <input\r\n                        type=\"text\"\r\n                        value={value}\r\n                        onChange={filter}\r\n                        className={styles.FilterInput}\r\n                    />\r\n                </label>\r\n            </div>\r\n        </CSSTransition>\r\n    )\r\n}\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    filter: PropTypes.func.isRequired,\r\n    contacts: PropTypes.array.isRequired,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    contacts: state.contacts.items,\r\n    value: phonebookSelectors.getFilter(state),\r\n})\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    filter: (event) => dispatch(changeFilter(event.currentTarget.value)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter)\r\n","// extracted by mini-css-extract-plugin\nexport default {\"Container\":\"Phonebook_Container__J0bVJ\",\"HeaderFadeAppear\":\"Phonebook_HeaderFadeAppear__KqZSx\",\"HeaderFadeAppearActive\":\"Phonebook_HeaderFadeAppearActive__c2ojT\",\"ContactListFadeEnter\":\"Phonebook_ContactListFadeEnter__4YvyS\",\"ContactListFadeEnterActive\":\"Phonebook_ContactListFadeEnterActive__yWqyS\",\"ContactListFadeExit\":\"Phonebook_ContactListFadeExit__wxXBj\",\"ContactListFadeExitActive\":\"Phonebook_ContactListFadeExitActive__1d7Yl\",\"ContactListFadeAppear\":\"Phonebook_ContactListFadeAppear__bm1G+\",\"ContactListFadeAppearActive\":\"Phonebook_ContactListFadeAppearActive__bhEus\"};","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport phonebookOperations from '../../redux/phonebook/phonebook-operations'\r\nimport ContactForm from '../Contactform/ContactForm'\r\nimport ContactList from '../ContactList/ContactList'\r\nimport contactSelectors from '../../redux/phonebook/phonebook-selectors'\r\nimport Loader from '../Loader/Loader'\r\nimport Filter from '../Filter/Filter'\r\nimport styles from './Phonebook.module.css'\r\nimport PropTypes from 'prop-types'\r\nimport './Phonebook.css'\r\n\r\nfunction Phonebook({ fetchContacts, contacts, isLoadingContats }) {\r\n    useEffect(() => {\r\n        fetchContacts()\r\n    }, [])\r\n\r\n    return (\r\n        <CSSTransition\r\n            in={true}\r\n            appear={true}\r\n            timeout={500}\r\n            classNames={{\r\n                appear: styles.HeaderFadeAppear,\r\n                appearActive: styles.HeaderFadeAppearActive,\r\n            }}\r\n        >\r\n            <div className={styles.Container}>\r\n                <CSSTransition\r\n                    in={true}\r\n                    appear={true}\r\n                    timeout={500}\r\n                    classNames={{\r\n                        appear: styles.HeaderFadeAppear,\r\n                        appearActive: styles.HeaderFadeAppearActive,\r\n                    }}\r\n                >\r\n                    <h1>Phonebook</h1>\r\n                </CSSTransition>\r\n\r\n                <ContactForm />\r\n\r\n                <CSSTransition\r\n                    in={contacts.length >= 1}\r\n                    timeout={0}\r\n                    unmountOnExit\r\n                >\r\n                    <Filter />\r\n                </CSSTransition>\r\n                {isLoadingContats && <Loader />}\r\n                <CSSTransition\r\n                    in={contacts.length > 0}\r\n                    timeout={250}\r\n                    unmountOnExit\r\n                >\r\n                    <ContactList />\r\n                </CSSTransition>\r\n            </div>\r\n        </CSSTransition>\r\n    )\r\n}\r\n\r\nPhonebook.propTypes = {\r\n    contacts: PropTypes.array.isRequired,\r\n    isLoadingContats: PropTypes.bool.isRequired,\r\n    fetchContacts: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    contacts: state.contacts.items,\r\n    isLoadingContats: contactSelectors.getLoading(state),\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    fetchContacts: () => dispatch(phonebookOperations.fetchContacts()),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Phonebook)\r\n"],"names":["contact","dispatch","addContactRequest","axios","data","addContactSuccess","addContactError","message","contactId","deleteContactRequest","deleteContactSuccess","deleteContactError","fetchContactRequest","fetchContactSuccess","fetchContactError","sameContact","currentNumber","className","styles","connect","state","contacts","items","addContact","phonebookOperations","useState","name","setName","number","setNumber","alert","setAlert","checkContact","find","toLowerCase","alertState","clearInput","setTimeout","onSubmit","event","preventDefault","id","shortid","type","value","onChange","target","CSSTransition","in","timeout","classNames","enter","enterActive","exit","exitActive","unmountOnExit","getFilter","filter","getContacts","getLoading","loading","getfilteredElements","createSelector","normalizedFilter","includes","filteredContacts","phonebookSelectors","deleteContact","resetFilter","changeFilter","TransitionGroup","component","classnames","map","onClick","length","color","height","width","currentTarget","isLoadingContats","contactSelectors","fetchContacts","useEffect","appear","appearActive","Loader"],"sourceRoot":""}